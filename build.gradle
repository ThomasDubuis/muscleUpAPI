plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.sonarqube" version "4.4.1.3373" // TODO Faire comme le projet GM pour la config de sonarqube
}

group = 'com.ynov'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

bootRun {
    mainClass = 'com.ynov.muscleup.MuscleUpApplication'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //Database
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.5'

    //Security
    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    //Logger
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'

    //Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.10.0'

}

tasks.named('test') {
    useJUnitPlatform()
}



sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000" //TODO host sonarqube
        property "sonar.projectKey", "muscle-up-api"
        property "sonar.projectName", "MuscleUp API"
        property "sonar.language", "java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.scm.enabled", "true"
        property "sonar.scm.url", "http://XXXXXX:8000/muscle-up-api" // TODO Lien github
        property "sonar.junit.reportsPaths", "build/test-results/test"
        property "sonar.jacoco.reportPaths", "build/jacoco/test.exec"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.sources", "src/main"
        property "sonar.tests", "src/test"
        property "sonar.exclusions", "src/main/java/com/ynov/muscleup/config/*.java"
        property "sonar.coverage.exclusions", "src/main/java/com/ynov/muscleup/MuscleUpApplication.java," +
                "src/main/java/com/ynov/muscleup/config/*.java," +
                "src/main/java/com/ynov/muscleup/repository/*.java," +
                "src/main/java/com/ynov/muscleup/model/**/*.java,"
        property "sonar.test.exclusions", "src/test/**"
    }
}
